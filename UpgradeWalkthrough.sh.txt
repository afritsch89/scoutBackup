#############################
#              STEP 1       #
# Backup existing databases #
#############################
###takes some time so do start this first!

#remove old backup
rm -fr /maria/backups/prePatch
###########################

#set open files to mitigate backup issues...
ulimit -n 8192
mariabackup -umariabackup -pChr@M@riaB@ckUP1885 --backup --target-dir='/maria/backups/prePatch'



######################################################
#                    STEP 1A                         #
#                Script    Prep                      #
######################################################

#It is recomended that before you spin down MariaDB you first go through this prep and ensure Steps 3 & 4
#are populated with the proper package name and package path.

###################################################
# Get list of curently installed MariaDB packages #
###################################################

rpm --query --all | grep -i -E "mariadb|galera|jemalloc" | sort

#make a note of the output you will need it to determine wich NEW packages to install.
#Use this list to replace existing packages found in Step 3 of this script.


###################################################
# Prepare and create list of new MariaDB packages #
###################################################

#Copy the tar from the MariaDB site to the box you are patching
# https://mariadb.com/downloads/enterprise/enterprise-server/   #<---requires MariaDB account -- now requires a request to maria team to send via DODsafe
##You may need to DOD Safe this to yourself from a civ PC

#/maria/patch is the prefered location to place your patches.

#UnTar your patch (You can tab complete this)
tar -xf /glide/scripts/patch/mariadb-enterprise-10

#I like to then cd into and run:

ls | sort

#on this directory, copy the whole output into step 4 then whittle away the packages I do not need.


##########################
#         STEP 2         #
# Stop MariaDB correctly #
##########################

mariadb-admin shutdown


#################################
#              STEP 3           #
# Remove those packages by hand #
#################################
#when setting up, be mindful that we have no empty newlines between lines, and every line but the end has it's \


#sudo /usr/bin/rpm -e --nodeps \
galera-enterprise-4-26.4.20-1.el8.x86_64 \
MariaDB-backup-10.6.20_16-1.el8.x86_64 \
MariaDB-client-10.6.20_16-1.el8.x86_64 \
MariaDB-common-10.6.20_16-1.el8.x86_64 \
MariaDB-compat-10.6.20_16-1.el8.x86_64 \
MariaDB-cracklib-password-check-10.6.20_16-1.el8.x86_64 \
MariaDB-server-10.6.20_16-1.el8.x86_64 \
MariaDB-shared-10.6.20_16-1.el8.x86_64




##############################################################################
#                                STEP 4                                      #
#                      Install the new packages                              #
#      Note ONLY install 1 for 1 replacements for what you removed           #
# Populate this with the full path for the bins that extracted from your tar #
##############################################################################
#when setting up, be mindful that we have no empty newlines between lines, and every line but the end has it's \


#screen is probably a mess, clear it:
cls

#sudo /usr/bin/rpm -ivh \
galera-enterprise-4-26.4.21-1.el8.x86_64.rpm \
MariaDB-backup-10.6.21_17-1.el8.x86_64.rpm \
MariaDB-client-10.6.21_17-1.el8.x86_64.rpm \
MariaDB-common-10.6.21_17-1.el8.x86_64.rpm \
MariaDB-compat-10.6.21_17-1.el8.x86_64.rpm \
MariaDB-cracklib-password-check-10.6.21_17-1.el8.x86_64.rpm \
MariaDB-server-10.6.21_17-1.el8.x86_64.rpm \
MariaDB-shared-10.6.21_17-1.el8.x86_64.rpm





###############################################################
#                          STEP 5                             #
#                Re-add pre-STIGed configuration              #
###############################################################

#run the following to open the config:
sudo vi /etc/my.cnf.d/mariadb-enterprise.cnf



#COPY FROM THE BOTTOM OF THIS LONG LINE TO THE TOP OF THE NEXT LONG LINE, THEN PASTE INTO '/etc/my.cnf.d/mariadb-enterprise.cnf'
##############################################################################################################################################################################################################################################################

########################################
#   MySQL/MariaDB Configuration File   #
# STIGed and "Universal" for CHRA SNOW #
########################################

[client]
# Settings for the MySQL client connections
port                            = 3306                        # Port number for client connections
socket                          = /glide/mysql/temp/mysql.sock # Path to the Unix socket file for client connections

[server]
# Server-specific settings block

#############################################
#              SSL Settings                 #
# Not Needed as per STIG in NIPR Environment #
#############################################
#ssl-ca=/path/to/ssl/ca-cert.pem             # Path to the CA certificate for SSL connections
#ssl-cert=/path/to/ssl/server-cert.pem      # Path to the server certificate for SSL connections
#ssl-key=/path/to/ssl/server-key.pem        # Path to the server private key for SSL connections
#require_secure_transport = ON              # Require secure transport for connections
#Timezone  = UTC                            # Timezone for the server

#######################
# Basic Configuration #
#######################
[mysqld]
# Basic settings for the MySQL server
port                            = 3306                        # Port number for server connections
socket                          = /glide/mysql/temp/mysql.sock # Path to the Unix socket file for server connections
datadir                         = /glide/mysql/data            # Directory for storing database files
tmpdir                          = /glide/mysql/temp            # Directory for temporary files

#################
# Error Logging #
#################
log-error                       = /glide/mysql/data/MariaError.log # Path to the error log file

####################
# General Settings #
####################
sql-mode                        = NO_ENGINE_SUBSTITUTION         # SQL mode to avoid errors due to non-existent engines
server-id                       = 1234                           # Unique server ID for replication
bind-address                    = 0.0.0.0                        # Listen on all network interfaces
symbolic-links                  = 0                               # Disable symbolic links for security reasons

###################
# InnoDB Settings #
###################
default-storage-engine          = innodb                          # Default storage engine
innodb_buffer_pool_size         = 114G                            # Size of buffer pool for caching data and indexes
innodb_log_file_size            = 5G                              # Size of each InnoDB log file
innodb_log_buffer_size          = 16M                             # Size of buffer for InnoDB log data
innodb_file_per_table           = 1                               # Store each table's data in separate files
innodb_flush_log_at_trx_commit  = 0                               # Control when the log buffer is flushed to disk
innodb_flush_method             = O_DIRECT                         # Use direct I/O for avoiding double buffering
innodb_lock_wait_timeout        = 50                              # Timeout for InnoDB locks
innodb_stats_on_metadata        = 0                               # Disable statistics collection on metadata changes
innodb_adaptive_hash_index      = on                              # Enable adaptive hash indexing
innodb_max_dirty_pages_pct      = 75                              # Maximum percentage of dirty pages in the buffer pool
innodb_adaptive_hash_index_parts = 17                             # Number of parts for adaptive hash index
innodb_purge_threads            = 4                               # Number of threads for purging old row versions
innodb_purge_batch_size         = 300                             # Number of rows to purge per batch
innodb_max_purge_lag            = 5000000                         # Maximum allowed purge lag
innodb_strict_mode              = off                             # Disable strict mode for InnoDB

#####################
# Thread Management #
#####################
innodb_thread_concurrency       = 16                              # Number of threads for InnoDB operations
innodb_read_io_threads          = 10                              # Number of I/O threads for read operations
innodb_write_io_threads         = 8                               # Number of I/O threads for write operations
innodb_sync_spin_loops          = 20                              # Number of spin loops for InnoDB synchronization

#################
# Table Caching #
#################
table_open_cache                = 8000                            # Number of open tables to cache
table_definition_cache          = 12000                           # Number of table definitions to cache

#########################
# Connection Management #
#########################
max_connections                 = 4000                            # Maximum number of concurrent connections
max_allowed_packet              = 32M                             # Maximum packet size allowed
key_buffer_size                 = 128M                            # Size of the key buffer for MyISAM tables

###############
# Query Cache #
###############
query_cache_size                = 0                               # Disable query caching
query_cache_type                = 0                               # Disable query cache type

#####################
# AuditLog Settings #
#####################
plugin-load-add                 =server_audit2                    # Add the server audit plugin
server_audit                    =FORCE_PLUS_PERMANENT              # Force permanent server audit logging
server_audit_logging            = ON                              # Enable server audit logging
plugin-load-add                 =disks                            # Add the disks plugin
server_audit_file_path          =/maria/auditLog/audit.log        # Path for the audit log file

##################################
# Binary Logging and Replication #
##################################
#skip-log-bin                    # Disable binary logging
log-bin-trust-function-creators = 1                               # Trust function creators for binary logging
log-bin                         = /maria/binLog/mariadb-bin.log   # Path to the binary log file
expire_logs_days                = 1                               # Number of days to retain binary logs
max_binlog_size                 = 1073741824                      # Maximum size of each binary log file
binlog_format                   = MIXED                            # Binary log format (MIXED, STATEMENT, ROW)
read-only                       = 0                               # Allow write operations (set to 1 for read-only)
binlog_cache_size               = 1M                              # Size of the binary log cache
# relay-log                      = /glide/mysql/binlog/mysql-relay # Path to the relay log file
# relay-log-index                = /glide/mysql/binlog/mysql-relay.index # Path to the relay log index file
# relay-log-info-file            = /glide/mysql/binlog/mysql-relay.info # Path to the relay log info file
# log-slave-updates              = 1                               # Enable logging of slave updates
# slave_compressed_protocol      = 0                               # Disable compression for slave protocol

##########################
# Performance Monitoring #
##########################
performance_schema              = on                              # Enable Performance Schema for monitoring
innodb_print_all_deadlocks      = on                              # Print all InnoDB deadlock errors

############
# Security #
############
secure-auth                     = on                              # Require secure authentication
local-infile                    = off                             # Disable local file loading for security
plugin-load-add=auth_ed25519   # Add Ed25519 authentication plugin
plugin-load-add=simple_password_check # Add simple password check plugin

##########################
# Additional STIG Settings #
##########################
#plugin_maturity               = beta # This is what SNOW said
plugin_maturity                = stable # This is what the STIG says, seems to work just fine.

####################
# Timeout Settings #
####################
net_write_timeout               = 900                             # Timeout for writing to the network
net_read_timeout                = 900                             # Timeout for reading from the network
lock_wait_timeout               = 14400                           # Timeout for waiting for a lock
idle_transaction_timeout        = 142                             # Timeout for idle transactions
idle_write_transaction_timeout  = 142                             # Timeout for idle write transactions
idle_readonly_transaction_timeout = 142                           # Timeout for idle readonly transactions

######################
# mysqldump Settings #
######################
[mysqldump]
# Settings for mysqldump utility
quick
max_allowed_packet              = 32M                             # Maximum packet size for mysqldump

#########################
# MySQL Client Settings #
#########################
[mysql]
no-auto-rehash                  # Disable automatic rehashing of table names

[mysqld_safe]
log-error                       = /glide/mysql/data/mDBerror.log   # Path to the error log file for mysqld_safe

[mariadb]
# Additional MariaDB settings block

####################################
# STIG Mandated Keepalive Settings #
####################################
tcp_keepalive_interval = 142     # Interval between keepalive probes
tcp_keepalive_probes = 142       # Number of keepalive probes
tcp_keepalive_time = 142         # Time before starting keepalive probes
tcp_nodelay = ON                 # Enable TCP_NODELAY option for connections
max_statement_time = 142         # Maximum allowed time for a statement to execute

############
# Timeouts #
############
#interactive_timeout = value    # Timeout for interactive sessions
#wait_timeout = value            # Timeout for non-interactive sessions
#idle_transaction_timeout = value # Timeout for idle transactions
#idle_write_transaction_timeout = value # Timeout for idle write transactions
#idle_readonly_transaction_timeout = value # Timeout for idle readonly transactions

#########################################
# Simple Password Check Plugin Settings #
#########################################
simple_password_check_digits = 2                      # Minimum number of digits required in passwords
simple_password_check_letters_same_case = 2           # Minimum number of letters in the same case
simple_password_check_minimal_length = 15             # Minimum length of passwords
simple_password_check_other_characters = 2            # Minimum number of other characters required in passwords
#default_password_lifetime = 60                       # Password lifetime (disabled until the application team can update passwords regularly)

###############################
# Additional MariaDB Settings #
###############################
local_infile = 0              # Disable local file loading
loose-skip-innodb-adaptive-hash-index # Disable adaptive hash index if it impacts performance

[mariabackup]
open_files_limit=65535        # Limit on the number of open files during backup operations




############################################################################
#     Scripts and cron jobs that need to be added to each MariaDB Server   #
# Kept in CNF for easy access if found missing or for new Maria Insatances #
############################################################################

####Audit space check:

# #!/bin/bash

# DATADIR=/maria/auditLog/
# CURRENT=$(df ${DATADIR?} | grep / | awk '{ print $5}' | sed 's/%//g')
# THRESHOLD=75

# if [ "$CURRENT" -gt "$THRESHOLD" ] ; then
# mail -s 'Disk Space Alert' alexander.h.fritsch4.civ << EOF
# The data directory volume is almost full. Used: $CURRENT
# %EOF
# fi


####Hourly Maria cron job
# # Hourly Maria cron job
# 0 * * * * /glide/scripts/logSizeCheck

##############################################################################################################################################################################################################################################################






#########################################################
#                          STEP 6                       #
# Start MariaDB and pray to the DBMS gods nothing broke #
#########################################################

sudo /bin/systemctl start mariadb.service


#Be sure to check that:
#1. the database still exists:
mariadb -e 'show databases;'

#and 2. we did in fact upgrade MariaDB:
mariadb -e 'select @@version;'

#Both of these can be ran from the shell so long as the user in question has a MariaDB user account with propper permissions to run said command.



################################################################
#                          STEP 6B                             #
#      Only for major version upgrade will you need to run     #
# this, but it MUST be ran IF you patched to a major update!!! #
################################################################


mariadb-upgrade --force --force  


#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#
#                          STEP 7                           #
#!!!!!!!!!!!!!   DELETE YOUR PATCH FILES   !!!!!!!!!!!!!!!!!#
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#

#Retain the tar for fallback next time, and remove the old fallback tar.

#Poof you're a MariaDB DBA!
